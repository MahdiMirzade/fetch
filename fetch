#!/bin/sh

#colors
c1="\033[1;30m"
c2="\033[1;31m"
c3="\033[1;32m"
c4="\033[1;33m"
c5="\033[1;34m"
c6="\033[1;35m"
c7="\033[1;36m"
c8="\033[1;37m"
end="\033[1;0m"
unibox=" ██"
#unibox=" ▇▇"

#import info
. /etc/os-release

#get info functions 
Name() {
  read -r host < /etc/hostname;
  printf "$(whoami)@$host";
}
Os() { printf $NAME $(arch); }
Kernel() {
  printf "$(read -r _ _ kern _ < /proc/version;
  printf $kern)";
}
Uptime() {
  IFS=. read -r up _ < /proc/uptime;
  printf "$((up / 60 / 60 / 24))D $((up / 60 / 60 % 24))H $((up / 60 % 60))M";
}
Shell() { printf "$( printf ${SHELL##*/} )"; }
Desktop() { printf "$XDG_CURRENT_DESKTOP"; }
Memory() {
  while IFS=':k ' read -r mem1 mem2 _; do
    case $mem1 in
      MemTotal)
        memt=$(( $mem2 / 1000 ));;
      MemAvailable)
        memu=$(($memt - $mem2 / 1000));;
    esac;
  done < /proc/meminfo;
  printf "$memu""Mib"" / ""$memt""Mib";
}
help() { printf "${c2}Options:\n${c3}  -n|o|k|u|s|d|m\n${c4}  Name|Os|Kernel|Uptime|Shell|Desktop|Memory|All\n${c5}Example Usage:\n${c6}  fetch -nosd"; }

default() {
  printf "${c2}$unibox $(Name)\n"
  printf "${c3}$unibox Os: $(Os)\n"
  printf "${c4}$unibox Kernel: $(Kernel)\n"
  printf "${c5}$unibox Uptime: $(Uptime)\n"
  printf "${c6}$unibox Shell: $(Shell)\n"
  printf "${c7}$unibox DE/WM: $(Desktop)\n"
  printf "${c8}$unibox Memory: $(Memory)\n"
}

if [ "$1" != "" ]; then
  while getopts ":nokusdm" option; do
    case $option in
      n)
        printf "${c2}$unibox $(Name)\n";;
      o)
        printf "${c3}$unibox Os: $(Os)\n";;
      k)
        printf "${c4}$unibox Kernel: $(Kernel)\n";;
      u)
        printf "${c5}$unibox Uptime: $(Uptime)\n";;
      s)
        printf "${c6}$unibox Shell: $(Shell)\n";;
      d)
        printf "${c7}$unibox DE/WM: $(Desktop)\n";;
      m)
        printf "${c8}$unibox Memory: $(Memory)\n";;
      \?)
        help
        break;;
    esac
  done
else
  default;
fi
printf "\n"
