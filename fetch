#!/bin/sh

# Colors
c() { printf "\033[$1;$2m"; }

# Import info
source /etc/os-release

# Get info functions
Name() {
  read -r host < /etc/hostname;
  printf "$USER@$host";
}
Os() { printf $NAME; }
Kernel() {
  printf "$(read -r _ _ kern _ < /proc/version;
  printf $kern)";
}
Uptime() {
  IFS=. read -r up _ < /proc/uptime;
  printf "$((up / 60 / 60 / 24))D $((up / 60 / 60 % 24))H $((up / 60 % 60))M";
}
Shell() { printf "$( printf ${SHELL##*/} )"; }
Desktop() {
  if [ "$DESKTOP_SESSION" != "" ]; then
    printf "$DESKTOP_SESSION\n"
  elif [ "$XDG_CURRENT_DESKTOP" != "" ]; then
    printf "$XDG_CURRENT_DESKTOP\n"
  else
    for i in /proc/*/comm; do
      read -r p < "$i"
      case $p in
        awesome|xmonad*|qtile|sway|i3|[bfo]*box|*wm*|*wm) printf "${p%%-*}"; break;;
      esac
    done
  fi
}
Memory() {
  while IFS=':k ' read -r mem1 mem2 _; do
    case $mem1 in
      MemTotal)
        memt=$(( $mem2 / 1024 ));;
      MemAvailable)
        memu=$(($memt - $mem2 / 1024));;
    esac;
  done < /proc/meminfo;
  printf "$memu""Mib"" / ""$memt""Mib";
}

help() { printf "Usage: fetch [ -c config | -h ]
Report issue at: https://github.com/manas140/fetch\n\n" && exit; }

# Import config
if [ -f $HOME/.config/fetch/conf ]; then
  source $HOME/.config/fetch/conf
else
  # Default Config
  conf() {
    printf "\n"
    printf "$(c 1 31) $(Name)\n"
    printf "$(c 1 32) Os: $(Os)\n"
    printf "$(c 1 33) Kernel: $(Kernel)\n"
    printf "$(c 1 34) Uptime: $(Uptime)\n"
    printf "$(c 1 35) Shell: $(Shell)\n"
    printf "$(c 1 36) DE/WM: $(Desktop)\n"
    printf "$(c 1 37) Memory: $(Memory)\n"
    printf "\n"
  }
fi

case "$1" in
  *-c*) [ -f "$2" ] && source $2 ;;
  *-h*) help;;
esac

conf
